CP/M MACRO ASSEM 2.0	#001	CP/M VERSION 2.2 SYSTEM RELOCATOR - 2/80

                	TITLE	'CP/M VERSION 2.2 SYSTEM RELOCATOR - 2/80'
                ;	CPM RELOCATOR PROGRAM, INCLUDED WITH THE MODULE TO PERFORM
                ;	THE MOVE FROM 900H TO THE DESTINATION ADDRESS
                ;
                ;	COPYRIGHT (C) 1979
                ;	DIGITAL RESEARCH
                ;	BOX 579, PACIFIC GROVE CALIFORNIA
                ;	93950
                ;
 0100           	ORG	100H
 0100 C32C01    	JMP	PASTCOPY
 0103 434F505952COPY:	DB	'COPYRIGHT (C) DIGITAL RESEARCH, 1979     '
                PASTCOPY:
 0003 =         BIOSWK	EQU	03H	;THREE PAGES FOR BIOS WORKSPACE
 0800 =         STACK	EQU	800H
 0801 =         MODSIZ	EQU	801H	;MODULE SIZE IS STORED HERE
 0016 =         VERSION	EQU	22	;CPM VERSION NUMBER
 0080 =         BOOTSIZ	EQU	080H	;SIZE OF THE COLD START LOADER
                ;	(MAY HAVE FIRST 80H BYTES = 00H)
 0800 =         BDOSL	EQU	0800H	;RELATIVE LOCATION OF BDOS
 1600 =         BIOS	EQU	1600H	;RELATIVE LOCATION OF BIOS
                ;
 0000 =         BOOT	EQU	0000H	;REBOOT LOCATION
 0005 =         BDOS	EQU	0005H
 0009 =         PRNT	EQU	9	;PRINT BUFFER FUNCTION
 005C =         FCB	EQU	5CH	;DEFAULT FCB
 0900 =         MODULE	EQU	900H	;MODULE ADDRESS
                ;
 000D =         CR	EQU	0DH
 000A =         LF	EQU	0AH
 012C 310008    	LXI	SP,STACK
                ;
                ;	MAY BE MEMORY SIZE SPECIFIED IN COMMAND
 012F 115D00    	LXI	D,FCB+1
 0132 1A        	LDAX	D
 0133 FE20      	CPI	' '
 0135 CA9101    	JZ	FINDTOP
 0138 FE3F      	CPI	'?'	;WAS * SPECIFIED?
 013A CA9101    	JZ	FINDTOP
                ;
                ;	MUST BE MEMORY SIZE SPECIFICATION
 013D 210000    	LXI	H,0
                CLOOP:	;CONVERT TO DECIMAL
 0140 1A        	LDAX	D
 0141 13        	INX	D
 0142 FE20      	CPI	' '
 0144 CA5F01    	JZ	ECON
 0147 B7        	ORA	A
 0148 CA5F01    	JZ	ECON
                ;	MUST BE DECIMAL DIGIT
 014B D630      	SUI	'0'
 014D FE0A      	CPI	10
 014F D27201    	JNC	CERROR
                ;	DECIMAL DIGIT IS IN A
 0152 29        	DAD	H	;*2
 0153 E5        	PUSH	H
CP/M MACRO ASSEM 2.0	#002	CP/M VERSION 2.2 SYSTEM RELOCATOR - 2/80

 0154 29        	DAD	H	;*4
 0155 29        	DAD	H	;*8
 0156 C1        	POP	B	;*2 IN B,C
 0157 09        	DAD	B	;*10 IN H,L
 0158 4F        	MOV	C,A
 0159 0600      	MVI	B,0
 015B 09        	DAD	B	;*10+X
 015C C34001    	JMP	CLOOP
                ECON:	;END OF CONVERSION, CHECK FOR PROPER RANGE
 015F 7C        	MOV	A,H
 0160 B7        	ORA	A
 0161 C27201    	JNZ	CERROR
 0164 7D        	MOV	A,L
 0165 FE10      	CPI	16
 0167 DA7201    	JC	CERROR
 016A 2E00      	MVI	L,0
 016C 67        	MOV	H,A
 016D 29        	DAD	H	;SHL 1
 016E 29        	DAD	H	;SHL 2 FOR KILOBYTES
                ;	H,L HAVE TOP OF MEMORY+1
 016F C3A501    	JMP	SETASC
                ;
                CERROR:
 0172 117B01    	LXI	D,CONMSG
 0175 CD6603    	CALL	PRINT
 0178 C30000    	JMP	BOOT
 017B 0D0A494E56CONMSG:	DB	CR,LF,'INVALID MEMORY SIZE$'
                ;
                ;
                ;	FIND END OF MEMORY
                FINDTOP:
 0191 210000    	LXI	H,0
 0194 24        FINDM:	INR	H	;TO NEXT PAGE
 0195 CAA101    	JZ	MSIZED	;CAN OVERFLOW ON 64K SYSTEMS
 0198 7E        	MOV	A,M
 0199 2F        	CMA
 019A 77        	MOV	M,A
 019B BE        	CMP	M
 019C 2F        	CMA
 019D 77        	MOV	M,A	;BITS INVERTED FOR RAM OPERATIONAL TEST
 019E CA9401    	JZ	FINDM
                ;	BITS DIDN'T CHANGE, MUST BE END OF MEMORY
                ;	ALIGN ON EVEN BOUNDARY
 01A1 7C        MSIZED:	MOV	A,H
 01A2 E6FC      	ANI	1111$1100B	;EVEN 1K BOUNDARY
 01A4 67        	MOV	H,A
                SETASC:	;SET ASCII VALUE OF MEMORY SIZE
 01A5 E5        	PUSH	H	;SAVE FOR LATER
                ;	**** SERIALIZATION ****
 01A6 2A0600    	LHLD	BDOS+1
 01A9 226B03    	SHLD	SER1
                ;	**** SERIALIZATION ****
 01AC E1        	POP	H
 01AD E5        	PUSH	H
 01AE 7C        	MOV	A,H
 01AF 0F        	RRC
CP/M MACRO ASSEM 2.0	#003	CP/M VERSION 2.2 SYSTEM RELOCATOR - 2/80

 01B0 0F        	RRC
 01B1 E63F      	ANI	11$1111B	;FOR 1K COUNTS
 01B3 C2B801    	JNZ	NOT64		;MAY BE 64 K MEM SIZE
 01B6 3E40      	MVI	A,64		;SET TO LITERAL IF SO
 01B8 47        NOT64:	MOV	B,A		;READY FOR COUNT DOWN
 01B9 217E03    	LXI	H,AMEM
 01BC 3E30      	MVI	A,'0'
 01BE 77        	MOV	M,A
 01BF 23        	INX	H
 01C0 77        	MOV	M,A	;BOTH ARE SET TO ASCII 0
 01C1 217F03    ASC0:	LXI	H,AMEM+1		;ADDRESS OF ASCII EQUIVALENT
 01C4 34        	INR	M
 01C5 7E        	MOV	A,M
 01C6 FE3A      	CPI	'9'+1
 01C8 DACF01    	JC	ASC1
 01CB 3630      	MVI	M,'0'
 01CD 2B        	DCX	H
 01CE 34        	INR	M
 01CF 05        ASC1:	DCR	B	;COUNT DOWN BY KILOBYTES
 01D0 C2C101    	JNZ	ASC0
 01D3 116F03    	LXI	D,MEMSG
 01D6 CD6603    	CALL	PRINT	;MEMORY SIZE MESSAGE
                ;
 01D9 210108    	LXI	H,MODSIZ
 01DC 4E        	MOV	C,M
 01DD 23        	INX	H
 01DE 46        	MOV	B,M	;B,C CONTAINS MODULE SIZE
 01DF C5        	PUSH	B	;MODULE SIZE STACKED ON MEM SIZE
                ;
                ;	TRY TO FIND THE ASCII STRING 'K CP/M VER X.X' TO SET SIZE
 01E0 210009    	LXI	H,MODULE
                ;	B,C CONTAINS MODULE LENGTH
                SLOOP:	;SEARCH LOOP
 01E3 118003    	LXI	D,AMSG
 01E6 78        	MOV	A,B
 01E7 B1        	ORA	C
 01E8 CA2C02    	JZ	ESEAR	;END OF SEARCH
 01EB 0B        	DCX	B	;COUNT SEARCH LENGTH DOWN
 01EC C5        	PUSH	B
 01ED 0E0F      	MVI	C,LAMSG	;LENGTH OF SEARCH MESSAGE
 01EF E5        	PUSH	H	;SAVE BASE ADDRESS OF SEARCH
                CHLOOP:	;CHARACTER LOOP, MATCH ON CONTENTS OF D,E AND H,L
 01F0 1A        	LDAX	D
 01F1 BE        	CMP	M
 01F2 C21A02    	JNZ	NOMATCH
 01F5 13        	INX	D	;TO NEXT SEARCH CHARACTER
 01F6 23        	INX	H	;TO NEXT MATCH CHARACTER
 01F7 0D        	DCR	C	;COUNT LENGTH DOWN
 01F8 CA2002    	JZ	FSEAR	;FOUND SEARCH STRING
 01FB C3F001    	JMP	CHLOOP
                ;
                ;	**** SERIALIZATION ****
 01FE 01        	DB	LXI	;CONFUSE DISASSEMBLER
                BADSER:	;BAD SERIAL NUMBER, LOOP TO CONFUSE ICE-80
 01FF AF        	XRA	A
                BADSER0:
CP/M MACRO ASSEM 2.0	#004	CP/M VERSION 2.2 SYSTEM RELOCATOR - 2/80

 0200 3D        	DCR	A
 0201 C20002    	JNZ	BADSER0
                ;
 0204 21F376    	LXI	H,DI OR (HLT SHL 8)
 0207 226B03    	SHLD	PRHLT
 020A 216803    	LXI	H,PRJMP
 020D 36CD      	MVI	M,CALL	;CHANGE JMP BDOS TO CALL
 020F 117F02    	LXI	D,SYNCMSG-5
 0212 210500    	LXI	H,5
 0215 19        	DAD	D	;TO CONFUSE SEARCHES ON ADDRESSES
 0216 EB        	XCHG
 0217 C36603    	JMP	PRINT
                ;	**** SERIALIZATION ****
                ;
                NOMATCH:
                	;NOT FOUND AT THIS ADDRESS, LOOK AT NEXT ADDRESS
 021A E1        	POP	H
 021B 23        	INX	H
 021C C1        	POP	B	;RECALL MODULE LENGTH
 021D C3E301    	JMP	SLOOP
                ;
                FSEAR:
                	;FOUND STRING, SET MEMORY SIZE
 0220 E1        	POP	H	;START ADDRESS OF STRING BEING MATCHED
 0221 C1        	POP	B	;CLEAR B,C WHICH WAS STACKED
 0222 2B        	DCX	H
 0223 117F03    	LXI	D,AMEM+1
 0226 1A        	LDAX	D
 0227 77        	MOV	M,A
 0228 2B        	DCX	H
 0229 1B        	DCX	D
 022A 1A        	LDAX	D
 022B 77        	MOV	M,A
                ;	END OF FILL
                ;
                ESEAR:	;END OF SEARCH
                ;	**** SERIALIZATION ****
                ;	CHECK FOR LEAST SIGNIFICANT BYTE OF 06 IN SER1
 022C 016B03    	LXI	B,SER1
 022F 0A        	LDAX	B
 0230 FE06      	CPI	6
 0232 3E00      	MVI	A,0
                ;	JNZ	SETJMP	;BAD SERIALIZATION IF NOT 06
 0234 02        	STAX	B	;STORE 00 TO LEAST SIGNIFICANT BYTE
                ;	**** SERIALIZATION ****
 0235 C1        	POP	B	;RECOVER MODULE LENGTH
 0236 E1        	POP	H	;H,L CONTAINS END OF MEMORY
 0237 C5        	PUSH	B	;SAVE LENGTH FOR RELOCATION BELOW
 0238 78        	MOV	A,B
 0239 C603      	ADI	BIOSWK	;ADD BIOS WORK SPACE TO MODULE LENGTH
 023B 47        	MOV	B,A
 023C 7D        	MOV	A,L
 023D 91        	SUB	C	;COMPUTE MEMTOP-MODULE SIZE
 023E 6F        	MOV	L,A
 023F 7C        	MOV	A,H
 0240 98        	SBB	B
CP/M MACRO ASSEM 2.0	#005	CP/M VERSION 2.2 SYSTEM RELOCATOR - 2/80

 0241 67        	MOV	H,A
                ;	H,L CONTAINS THE BASE OF THE RELOCATION AREA
 0242 226D03    	SHLD	RELBAS	;SAVE THE RELOCATION BASE
 0245 EB        	XCHG		;MODULE BASE TO D,E
 0246 210009    	LXI	H,MODULE;READY FOR THE MOVE
 0249 C1        	POP	B	;RECOVER ACTUAL MODULE LENGTH
 024A C5        	PUSH	B	;SAVE FOR RELOCATION
 024B 3A6D00    	LDA	FCB+17	;CHECK FOR NO MOVE CONDITION
 024E FE20      	CPI	' '
                ;	JZ	MOVE
                ;	SECOND PARAMETER SPECIFIED, LEAVE THE DATA AT 'MODULE'
 0250 09        	DAD	B	;MOVE H,L TO BIT MAP POSITION
 0251 C36A02    	JMP	RELOC
                ;
                ;	**** SERIALIZATION ****
 0254 21FF01    SETJMP:	LXI	H,BADSER	;BAD SERIALIZATION
 0257 22F802    	SHLD	JMPSER+1	;FILL JUMP INSTRUCTION
 025A C3F702    	JMP	JMPSER		;EVENTUAL JUMP TO MESSAGE
                ;	**** SERIALIZATION ****
                ;
                MOVE:
 025D 78        	MOV	A,B	;BC=0?
 025E B1        	ORA	C
 025F CA6A02    	JZ	RELOC
 0262 0B        	DCX	B	;COUNT MODULE SIZE DOWN TO ZERO
 0263 7E        	MOV	A,M	;GET NEXT ABSOLUTE LOCATION
 0264 12        	STAX	D	;PLACE IT INTO THE RELOC AREA
 0265 13        	INX	D
 0266 23        	INX	H
 0267 C35D02    	JMP	MOVE
                ;
                RELOC:	;STORAGE MOVED, READY FOR RELOCATION
                ;	HL ADDRESSES BEGINNING OF THE BIT MAP FOR RELOCATION
 026A C1        	POP	B	;RECALL MODULE LENGTH
 026B E5        	PUSH	H	;SAVE BIT MAP BASE IN STACK
 026C 2A6D03    	LHLD	RELBAS
 026F EB        	XCHG
 0270 218000    	LXI	H,BOOTSIZ
 0273 19        	DAD	D	;TO FIND BIAS VALUE
                ;	REGISTER H CONTAINS BIAS VALUE
                ;
                ;	RELOCATE AT 'MODULE' IF SECOND PARAMETER GIVEN
 0274 3A6D00    	LDA	FCB+17
 0277 FE20      	CPI	' '
                ;	JZ	REL0
                ;
                ;	IMAGE NOT MOVED, ADJUST VALUES AT 'MODULE'
 0279 110009    	LXI	D,MODULE
 027C 78        REL0:	MOV	A,B	;BC=0?
 027D B1        	ORA	C
 027E CAB702    	JZ	ENDREL
                ;	**** SERIALIZATION ****
 0281 C39B02    	JMP	PASTSYNC
                SYNCMSG:
 0284 0D0A53594E	DB	CR,LF,'SYNCRONIZATION ERROR$'
                PASTSYNC:
CP/M MACRO ASSEM 2.0	#006	CP/M VERSION 2.2 SYSTEM RELOCATOR - 2/80

                ;	**** SERIALIZATION ****
                ;
                ;	NOT END OF THE RELOCATION, MAY BE INTO NEXT BYTE OF BIT MAP
 029B 0B        	DCX	B	;COUNT LENGTH DOWN
 029C 7B        	MOV	A,E
 029D E607      	ANI	111B	;0 CAUSES FETCH OF NEXT BYTE
 029F C2A702    	JNZ	REL1
                ;	FETCH BIT MAP FROM STACKED ADDRESS
 02A2 E3        	XTHL
 02A3 7E        	MOV	A,M	;NEXT 8 BITS OF MAP
 02A4 23        	INX	H
 02A5 E3        	XTHL		;BASE ADDRESS GOES BACK TO STACK
 02A6 6F        	MOV	L,A	;L HOLDS THE MAP AS WE PROCESS 8 LOCATIONS
 02A7 7D        REL1:	MOV	A,L
 02A8 17        	RAL		;CY SET TO 1 IF RELOCATION NECESSARY
 02A9 6F        	MOV	L,A	;BACK TO L FOR NEXT TIME AROUND
 02AA D2B302    	JNC	REL2	;SKIP RELOCATION IF CY=0
                ;
                ;	CURRENT ADDRESS REQUIRES RELOCATION
 02AD 1A        	LDAX	D
 02AE 84        	ADD	H	;APPLY BIAS IN H
 02AF 12        	STAX	D
 02B0 C3B302    	JMP	REL2
                ;
 02B3 13        REL2:	INX	D	;TO NEXT ADDRESS
 02B4 C37C02    	JMP	REL0	;FOR ANOTHER BYTE TO RELOCATE
                ;
                ENDREL:	;END OF RELOCATION
 02B7 D1        	POP	D	;CLEAR STACKED ADDRESS
                ;	**** SERIALIZATION ****
 02B8 118011    	LXI	D,MODULE+BDOSL+BOOTSIZ	;ADDRESSING NEW SERIAL NUMBER
 02BB 2A6B03    	LHLD	SER1			;ADDRESSING HOST SERIAL NUMBER
 02BE 0E06      	MVI	C,6			;LENGTH OF SERIAL NUMBER
 02C0 1A        CHKSER:	LDAX	D
 02C1 BE        	CMP	M
                ;	JNZ	SETJMP
 02C2 23        	INX	H
 02C3 13        	INX	D
 02C4 0D        	DCR	C
 02C5 C2C002    	JNZ	CHKSER
                ;	**** SERIALIZATION ****
                ;
 02C8 3A6D00    	LDA	FCB+17
 02CB FE20      	CPI	' '
                ;	JZ	TRANSFER
                ;	DON'T GO TO THE LOADED PROGRAM, LEAVE IN MEMORY
                ;	MAY HAVE TO MOVE THE PROGRAM IMAGE DOWN 1/2 PAGE
 02CD 0680      	MVI	B,128	;CHECK FOR 128 ZEROES
 02CF 210009    	LXI	H,MODULE
 02D2 7E        TR0:	MOV	A,M
 02D3 B7        	ORA	A
 02D4 C2FA02    	JNZ	TREND
 02D7 23        	INX	H
 02D8 05        	DCR	B
 02D9 C2D202    	JNZ	TR0
                ;
CP/M MACRO ASSEM 2.0	#007	CP/M VERSION 2.2 SYSTEM RELOCATOR - 2/80

                ;	ALL ZERO FIRST 1/2 PAGE, MOVE DOWN 80H BYTES
 02DC EB        	XCHG		;NEXT TO GET IN D,E
 02DD 2A0108    	LHLD	MODSIZ
 02E0 0180FF    	LXI	B,-128
 02E3 09        	DAD	B	;NUMBER OF BYTES TO MOVE IN H,L
 02E4 44        	MOV	B,H
 02E5 4D        	MOV	C,L	;TRANSFERRED TO B,C
 02E6 210009    	LXI	H,MODULE;DESTINATION IN H,L
 02E9 78        TRMOV:	MOV	A,B
 02EA B1        	ORA	C	;ALL MOVED?
 02EB CAFA02    	JZ	TREND
 02EE 0B        	DCX	B
 02EF 1A        	LDAX	D
 02F0 77        	MOV	M,A	;ONE BYTE TRANSFERRED
 02F1 13        	INX	D
 02F2 23        	INX	H
 02F3 C3E902    	JMP	TRMOV
                ;
                ;
                ;	**** SERIALIZATION ****
 02F6 01        	DB	LXI
 02F7 C3F702    JMPSER:	JMP	JMPSER	;ADDRESS FIELD FILLED-IN
                ;	**** SERIALIZATION ****
                ;
                TREND:	;SET ASCII MEMORY IMAGE SIZE
 02FA 210108    	LXI	H,MODSIZ
 02FD 4E        	MOV	C,M
 02FE 23        	INX	H
 02FF 46        	MOV	B,M
 0300 210009    	LXI	H,MODULE;B,C MODULE SIZE, H,L BASE
 0303 09        	DAD	B
 0304 44        	MOV	B,H	;B CONTAINS NUMBER OF PAGES TO SAVE+1
 0305 215003    	LXI	H,SAVMEM;ASCII MEMORY SIZE
 0308 3E30      	MVI	A,'0'
 030A 77        	MOV	M,A
 030B 23        	INX	H
 030C 77        	MOV	M,A
                ;	'00' STORED INTO MESSAGE
                TRCOMP:
 030D 05        	DCR	B
 030E CA2203    	JZ	TRC1
 0311 215103    	LXI	H,SAVMEM+1	;ADDRESSING LEAST DIGIT
 0314 34        	INR	M
 0315 7E        	MOV	A,M
 0316 FE3A      	CPI	'9'+1
 0318 DA0D03    	JC	TRCOMP
 031B 3630      	MVI	M,'0'
 031D 2B        	DCX	H
 031E 34        	INR	M
 031F C30D03    	JMP	TRCOMP
                ;	FILL CPMXX.COM FROM SAVMEM
 0322 2A7E03    TRC1:	LHLD	AMEM
 0325 225603    	SHLD	SAVM0
                ;	MESSAGE SET, PRINT IT AND REBOOT
 0328 113103    	LXI	D,RELOK
 032B CD6603    	CALL	PRINT
CP/M MACRO ASSEM 2.0	#008	CP/M VERSION 2.2 SYSTEM RELOCATOR - 2/80

 032E C30000    	JMP	BOOT
 0331 0D0A524541RELOK:	DB	CR,LF,'READY FOR "SYSGEN" OR'
 0348 0D0A225341	DB	CR,LF,'"SAVE '
 0350 3030204350SAVMEM:	DB	'00 CPM'
 0356 30302E434FSAVM0:	DB	'00.COM"$'
                ;
                TRANSFER:
                ;	GO TO THE RELOCATED MEMORY IMAGE
 035E 118016    	LXI	D,BOOTSIZ+BIOS	;MODULE 
 0361 2A6D03    	LHLD	RELBAS	;RECALL BASE OF RELOC AREA
 0364 19        	DAD	D	;INDEX TO 'BOOT' ENTRY POINT
 0365 E9        	PCHL		;GO TO RELOCATED PROGRAM
                ;
                ;	**** SERIALIZATION ****
                PRINT:
 0366 0E09      	MVI	C,PRNT
 0368 C30500    PRJMP:	JMP	BDOS
                PRHLT:
                ;
                ;	DATA	AREAS
 036B           SER1:	DS	2	;SERIAL NUMBER ADDRESS FOR HOST
 036D           RELBAS:	DS	2	;RELOCATION BASE
 036F 0D0A434F4EMEMSG:	DB	CR,LF,'CONSTRUCTING '
 037E 3030      AMEM:	DB	'00'
 0380 6B2043502FAMSG:	DB	'k CP/M vers '
 038C 322E32    	DB	VERSION/10+'0','.',VERSION MOD 10 +'0'
 000F =         LAMSG	EQU	$-AMSG	;LENGTH OF MESSAGE
 038F 24        	DB	'$'		;TERMINATOR FOR MESSAGE
 0390           	END
